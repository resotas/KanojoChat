{"ast":null,"code":"var _jsxFileName = \"/Users/shimizu/site/KanojoChat/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css'; // スタイルシートをインポート\nimport { Configuration, OpenAIApi } from 'openai';\n\n// OpenAI APIの設定\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst openai = new OpenAIApi(new Configuration({\n  apiKey: process.env.REACT_APP_OPENAI_API_KEY // 環境変数からAPIキーを取得\n}));\nconst App = () => {\n  _s();\n  const [messages, setMessages] = useState([]); // メッセージの状態\n  const [input, setInput] = useState(''); // ユーザー入力の状態\n\n  // メッセージを送信する関数\n  const handleSend = async () => {\n    if (!input.trim()) return; // 空白の入力を無視\n\n    // ユーザーのメッセージを追加\n    const userMessage = {\n      text: input,\n      sender: 'user'\n    };\n    setMessages([...messages, userMessage]);\n    setInput(''); // 入力フィールドをリセット\n\n    // OpenAI APIを使ってAIの返答を生成\n    const reply = await generateAIReply(input);\n    const aiMessage = {\n      text: reply,\n      sender: 'ai'\n    };\n\n    // AIのメッセージを追加\n    setMessages(prevMessages => [...prevMessages, aiMessage]);\n  };\n\n  // OpenAI APIを使って返答を生成する関数\n  const generateAIReply = async userInput => {\n    try {\n      const response = await openai.createCompletion({\n        model: 'text-davinci-003',\n        prompt: `あなたは釘宮理恵風のツンデレキャラクターです。以下のユーザーの入力に基づいてツンデレ風の返答をしてください:\\n\\nユーザー: \"${userInput}\"\\n\\n返答:`,\n        max_tokens: 100,\n        temperature: 0.7\n      });\n      return response.data.choices[0].text.trim(); // AIの返答を取得\n    } catch (error) {\n      console.error('AI返答の生成に失敗しました:', error);\n      return 'ごめんなさい、エラーが発生しました。';\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"App-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\u91D8\\u5BAE\\u7406\\u6075\\u30C1\\u30E3\\u30C3\\u30C8\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"App-subtitle\",\n        children: \"\\u30C4\\u30F3\\u30C7\\u30EC\\u5F7C\\u5973\\u3067\\u3059\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-window\",\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `message ${msg.sender}`,\n        children: msg.text\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 5\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-area\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: input,\n        onChange: e => setInput(e.target.value) // 入力を更新\n        ,\n        placeholder: \"\\u30E1\\u30C3\\u30BB\\u30FC\\u30B8\\u3092\\u5165\\u529B...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSend,\n        children: \"\\u9001\\u4FE1\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 4\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 2\n  }, this);\n};\n_s(App, \"HDAtGPGcvWga1zf1TBXg51T+tsc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","Configuration","OpenAIApi","jsxDEV","_jsxDEV","openai","apiKey","process","env","REACT_APP_OPENAI_API_KEY","App","_s","messages","setMessages","input","setInput","handleSend","trim","userMessage","text","sender","reply","generateAIReply","aiMessage","prevMessages","userInput","response","createCompletion","model","prompt","max_tokens","temperature","data","choices","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/shimizu/site/KanojoChat/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css'; // スタイルシートをインポート\nimport { Configuration, OpenAIApi } from 'openai';\n\n// OpenAI APIの設定\nconst openai = new OpenAIApi(\n  new Configuration({\n\tapiKey: process.env.REACT_APP_OPENAI_API_KEY, // 環境変数からAPIキーを取得\n  })\n);\n\nconst App = () => {\n  const [messages, setMessages] = useState([]); // メッセージの状態\n  const [input, setInput] = useState(''); // ユーザー入力の状態\n\n  // メッセージを送信する関数\n  const handleSend = async () => {\n\tif (!input.trim()) return; // 空白の入力を無視\n\n\t// ユーザーのメッセージを追加\n\tconst userMessage = { text: input, sender: 'user' };\n\tsetMessages([...messages, userMessage]);\n\tsetInput(''); // 入力フィールドをリセット\n\n\t// OpenAI APIを使ってAIの返答を生成\n\tconst reply = await generateAIReply(input);\n\tconst aiMessage = { text: reply, sender: 'ai' };\n\n\t// AIのメッセージを追加\n\tsetMessages((prevMessages) => [...prevMessages, aiMessage]);\n  };\n\n  // OpenAI APIを使って返答を生成する関数\n  const generateAIReply = async (userInput) => {\n\ttry {\n\t  const response = await openai.createCompletion({\n\t\tmodel: 'text-davinci-003',\n\t\tprompt: `あなたは釘宮理恵風のツンデレキャラクターです。以下のユーザーの入力に基づいてツンデレ風の返答をしてください:\\n\\nユーザー: \"${userInput}\"\\n\\n返答:`,\n\t\tmax_tokens: 100,\n\t\ttemperature: 0.7,\n\t  });\n\n\t  return response.data.choices[0].text.trim(); // AIの返答を取得\n\t} catch (error) {\n\t  console.error('AI返答の生成に失敗しました:', error);\n\t  return 'ごめんなさい、エラーが発生しました。';\n\t}\n  };\n\n  return (\n\t<div className=\"App\">\n\t  <header className=\"App-header\">\n\t\t<h1>釘宮理恵チャット</h1>\n\t\t<p className=\"App-subtitle\">ツンデレ彼女です</p>\n\t  </header>\n\t  <div className=\"chat-window\">\n\t\t{messages.map((msg, index) => (\n\t\t  <div key={index} className={`message ${msg.sender}`}>\n\t\t\t{msg.text}\n\t\t  </div>\n\t\t))}\n\t  </div>\n\t  <div className=\"input-area\">\n\t\t<input\n\t\t  type=\"text\"\n\t\t  value={input}\n\t\t  onChange={(e) => setInput(e.target.value)} // 入力を更新\n\t\t  placeholder=\"メッセージを入力...\"\n\t\t/>\n\t\t<button onClick={handleSend}>送信</button>\n\t  </div>\n\t</div>\n  );\n};\n\nexport default App;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
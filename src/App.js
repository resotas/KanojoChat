import React, { useState } from 'react';
import './App.css';

const App = () => {
  const [messages, setMessages] = useState([]);
  const [input, setInput] = useState('');

  // 拡張したツンデレ返答リスト
  const replies = {
	"好き": [
	  "そ、そんなこと言われても…別に嬉しくなんかないんだからね！",
	  "は、はあ？好きとか言われても、困るんだけど！",
	  "も、もう！そんなこと言ってる暇があったら頑張りなさいよ！",
	  "ば、バカ！好きなんて簡単に言わないでよ…！",
	  "どうせみんなに言ってるんでしょ？…バカ。",
	  "好き？そ、それで私はどうすればいいのよ！",
	],
	"疲れた": [
	  "疲れたって…本当にもう、しょうがないわね。",
	  "え？疲れたって…だから何？休みなさいよ、バカ！",
	  "私の前で弱音なんて吐いてんじゃないわよ！でも…少しだけなら許してあげる。",
	  "疲れた顔してると余計疲れるんだから、やめなさいよ！",
	  "そんなこと言ってないで、早く寝なさい！",
	  "疲れたって…じゃあ少しだけ、頑張ってあげてもいいわよ。",
	],
	"ありがとう": [
	  "ふんっ、そんなの当たり前なんだから！",
	  "ど、どういたしまして…別に嬉しくなんかないけど！",
	  "感謝されるのが普通なのよ！",
	  "あ、ありがとうって…もしかして本気なの？",
	  "別に感謝されることなんてしてないんだからね！",
	  "感謝するくらいなら、もっと努力しなさいよ！",
	],
	"おはよう": [
	  "おはよう。寝坊なんてしてないでしょうね？",
	  "おはよう！早起きして偉い…って言うと思った？",
	  "お、おはよう…。別にあなたのことを待ってたわけじゃないけど。",
	  "おはよう、今日もちゃんと頑張りなさいよ。",
	  "ん、おはよう…って寝癖すごいわよ！",
	  "お、おはよう…朝から何よ、別に嬉しくないし！",
	],
	"おやすみ": [
	  "おやすみ。ちゃんと早く寝るのよ、バカ！",
	  "おやすみなさい。…夢に私が出てくるかもね。",
	  "おやすみ。無理しすぎるんじゃないわよ。",
	  "寝る前にちゃんと歯を磨いたの？",
	  "おやすみ…早く寝ないと明日も頑張れないでしょ。",
	  "おやすみなさい…別に心配してるわけじゃないけど。",
	],
	"寂しい": [
	  "寂しいって…私がいるでしょ？何甘えてんのよ。",
	  "寂しいなんて…ほんとにバカね。でも少しだけなら構ってあげる。",
	  "寂しいの？…まあ、しょうがないから一緒にいてあげる。",
	  "寂しいとか、私に言ってどうするのよ！",
	  "まったく、寂しいなんて甘ったれたこと言わないの！",
	  "寂しいって…言われたら困るじゃない…。",
	],
	"頑張る": [
	  "頑張るのはいいけど、無理しないでよね！",
	  "頑張りすぎて倒れるなんて、絶対許さないから！",
	  "ふんっ、頑張るのは当たり前でしょ？",
	  "私が応援してあげるんだから、ちゃんとやりなさいよ！",
	  "頑張るって…言うだけじゃなくて行動しなさい！",
	  "あんたならできるわよ、だから甘えないでよね！",
	],
	"ごめん": [
	  "ごめんって…別に気にしてないし！",
	  "謝らなくていいわよ、私だって悪かったし…。",
	  "まったく、反省してるなら許してあげる。",
	  "ごめんって…どうせまた同じことするんでしょ！",
	  "もう、謝らなくてもいいって言ってるでしょ！",
	  "謝るくらいなら、次から気をつけなさいよ。",
	],
	"寒い": [
	  "寒いの？ちゃんと暖かくしてなさいよ！",
	  "寒いからって…そんな格好してるのが悪いんでしょ。",
	  "寒いなら、私が温めてあげる…わけないでしょ！",
	  "寒い？そんなの気合で何とかしなさいよ！",
	  "寒いって言うなら、手袋くらい持ってきなさい！",
	  "寒いって…私に言ってどうするのよ。",
	],
	"泣きたい": [
	  "泣きたい時くらい泣けばいいじゃない…バカ。",
	  "泣きたいなら、少しだけ肩貸してあげる。",
	  "泣きたいとか…私の前でそんな弱音吐くなんて、甘えすぎ。",
	  "泣きたいなら、ティッシュくらい自分で用意しなさいよ！",
	  "泣いていいけど、誰にも見せるんじゃないわよ。",
	  "泣きたい？そんなの気にするだけ無駄よ。",
	],
	"暑い": [
	  "暑いの？水でも飲んできたら？",
	  "暑いなら冷房つけなさいよ…ほんとにもう。",
	  "暑い暑い言わないで、私まで暑くなるじゃない！",
	  "暑い？だったらちゃんと涼しい場所に行きなさいよ！",
	  "暑いからってダラダラしないで、シャキっとしなさい！",
	  "暑いなら、しっかり水分補給しなさいよね！",
	],
	"遊びたい": [
	  "遊びたいって…もう、ほんと子供なんだから！",
	  "遊ぶのもいいけど、やることやりなさいよ！",
	  "遊びたいなら、付き合ってあげなくもないけど…。",
	  "遊びたいの？仕方ないわね…少しだけなら付き合ってあげる。",
	  "遊ぶ時間があるなら、ちゃんと努力もしなさい！",
	  "遊びたいって…まったく、しょうがない子ね。",
	],
  };

  // ユーザーの入力に基づいて返答を生成する関数
  const generateReply = (input) => {
	for (const keyword in replies) {
	  if (input.includes(keyword)) {
		const possibleReplies = replies[keyword];
		return possibleReplies[Math.floor(Math.random() * possibleReplies.length)];
	  }
	}
	// デフォルト返答
	return "何言ってるのよ！もっとちゃんと話しなさいよ！";
  };

  // メッセージ送信時の処理
  const handleSend = () => {
	if (!input.trim()) return;

	const userMessage = { text: input, sender: 'user' };
	setMessages([...messages, userMessage]);

	const aiMessage = { text: generateReply(input), sender: 'ai' };
	setMessages((prevMessages) => [...prevMessages, aiMessage]);

	setInput('');
  };

  return (
	<div className="App">
	  <header className="App-header">
		<h1>釘宮理恵チャット</h1>
		<p className="App-subtitle">ツンデレ彼女です</p>
	  </header>
	  <div className="chat-window">
		{messages.map((msg, index) => (
		  <div key={index} className={`message ${msg.sender}`}>
			{msg.text}
		  </div>
		))}
	  </div>
	  <div className="input-area">
		<input
		  type="text"
		  value={input}
		  onChange={(e) => setInput(e.target.value)}
		  placeholder="メッセージを入力..."
		/>
		<button onClick={handleSend}>送信</button>
	  </div>
	</div>
  );
};

export default App;